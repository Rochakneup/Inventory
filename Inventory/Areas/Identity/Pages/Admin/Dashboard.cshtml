@page
@model Inventory.Areas.Identity.Pages.Admin.DashboardModel
@{
}
<h1>Admin Dashboard</h1>

<div class="row">
    <div class="col-md-4 mb-4">
        <div class="card text-white bg-primary">
            <div class="card-body">
                <h5 class="card-title">Active Users</h5>
                <p class="card-text">@Model.ActiveUsersCount</p>
            </div>
        </div>
    </div>
    <div class="col-md-4 mb-4">
        <div class="card text-white bg-warning">
            <div class="card-body">
                <h5 class="card-title">Low Stock Products</h5>
                <p class="card-text">@Model.LowStockProductsCount</p>
            </div>
        </div>
    </div>
    <div class="col-md-4 mb-4">
        <div class="card text-white bg-success">
            <div class="card-body">
                <h5 class="card-title">Suppliers</h5>
                <p class="card-text">@Model.SuppliersCount</p>
            </div>
        </div>
    </div>
</div>

<div>
    <h2>Graphs</h2>
    <canvas id="productsBySupplierChart" width="400" height="200"></canvas>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        var ctx = document.getElementById('productsBySupplierChart').getContext('2d');
        var productsBySupplierChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.Suppliers.Select(s => s.Name))),
                datasets: [{
                    label: 'Products by Supplier',
                    data: @Html.Raw(Json.Serialize(Model.Suppliers.Select(s => s.Products.Count))),
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
}